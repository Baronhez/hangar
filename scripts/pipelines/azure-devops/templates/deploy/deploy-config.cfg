# List of the flages we used in different stages for deploy pipeline.
# Comma separated list of flags. Make sure to end with a comma, Eg: $name,$xyz,
mandatoryFlags="$pipelineName,$localDirectory,$manifestsPath,"
# Path to the templates.
templatesPath="scripts/pipelines/azure-devops/templates/deploy"
# YAML file name.
yamlFile="deploy-pipeline.yml"
# Path to the pipelines.
pipelinePath=".pipelines"
# Script directory.
scriptFilePath=".pipelines/scripts"
# Source branch.
sourceBranch="feature/deploy-pipeline"


# Function that copies the manifest files into the directory.
function copyScript {
    # Check if the manifest folder exists.
    if [ ! -d "${localDirectory}/${scriptFilePath}/${manifestsPath}" ]
    then  
        # Check if the manifest folder exists inside the .pipelines/scripts folder.
        # The folder does not exist,create the manifest folder.
        cd "${localDirectory}/${scriptFilePath}"
        mkdir "${manifestsPath}"
    fi
    # Copy the k8s manifest files into manifest folder.
    echo -e "${green}Copy the kubernetes manifest..."
    echo -ne ${white}
    cd "${hangarPath}/${templatesPath}/${manifestsPath}"
    cp * "${localDirectory}/${scriptFilePath}/${manifestsPath}"

}

# Function that adds the variables to be used in the pipeline.
function addPipelineVariables {
    # Create variables in Azure pipeline for service connection.
    echo -e "${green}Creating the variable for service connection..."
    echo -ne ${white}

    # Add the manifest files path variable.
    az pipelines variable create --name "manifestsPath" --pipeline-name $pipelineName --value ${manifestsPath}

    # Add the kubernetes service coonection variable.
    az pipelines variable create --name "k8s_service_connection" --pipeline-name $pipelineName --value ${k8s_service_connection}  

    # Add the container registry service connection variable.
    az pipelines variable create --name "container-reg-connection" --pipeline-name $pipelineName --value ${container-reg-connection} 

    # Add the k8s namespace variable.
    az pipelines variable create --name "k8sNamespace" --pipeline-name $pipelineName --value ${k8sNamespace}       
    
}

