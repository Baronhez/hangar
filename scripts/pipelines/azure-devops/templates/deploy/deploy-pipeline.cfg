# List of the flages we used in different stages for deploy pipeline.
# Comma separated list of flags. Make sure to end with a comma, Eg: $name,$xyz,
mandatoryFlags="$pipelineName,$localDirectory,$deployFiles,$aksProvisionPipeline,$deployCluster,"
# Path to the templates.
templatesPath="scripts/pipelines/azure-devops/templates/deploy"
# YAML file name.
yamlFile="deploy-pipeline.yml"
# Path to the pipelines.
pipelinePath=".pipelines"
# Script directory.
scriptFilePath=".pipelines/scripts"
# Source branch.
sourceBranch="feature/deploy-pipeline"

# Function that copies the script to deploy the application.
function copyScript {
    # Check if an extra artifact to store is supplied.
    if test ! -z "$artifactPath"
    then
        # Add the extra step to the YAML.
        cat "${hangarPath}/${templatesPath}/store-extra-path.yml" >> "${localDirectory}/${scriptFilePath}/${yamlFile}"
    fi
}

# Function that adds the variables to be used in the pipeline.
function addPipelineVariables {
    # Create variables in Azure pipeline.
    echo -e "${green}Creating the variable for deploy pipeline..."
    echo -ne ${white}

    # Add the manifest files path variable.
    az pipelines variable create --name "deployFiles" --pipeline-name $pipelineName --value $deployFiles

    # Add the package pipeline name as a variable.
    az pipelines variable create --name "packagePipeline" --pipeline-name $pipelineName --value $packagePipelineName 
    
    # Add the aksProvisionPipeline name as a variable.
    az pipelines variable create --name "aksProvisionPipeline" --pipeline-name $pipelineName --value $aksProvisionPipeline
    
    # Add the deployCluster value as a variable.
    az pipelines variable create --name "deployCluster" --pipeline-name $pipelineName --value $deployCluster 

}
