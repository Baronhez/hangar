trigger:
  branches:
    exclude:
    - '*'

resources:
  pipelines:
  - pipeline: 'Quality-Pipeline'
    source: '<@quality-pipeline-name@>'
    trigger:
      branches:
        include:
        - releases/*
        - develop
        - feature/*
        exclude:
        - master

pool:
  vmImage: ubuntu-latest

steps:

    - task: Bash@3
      displayName: 'Getting the last execution of the quality pipeline for the wanted commit'
      env:
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        targetType: inline
        script: 'chmod 755 $(Build.Repository.LocalPath)/.pipelines/scripts/CheckPipelineExec.sh; $(Build.Repository.LocalPath)/.pipelines/scripts/CheckPipelineExec.sh $(qualityPipeline) $(Build.SourceVersion)'

    - bash: 'echo "The quality pipeline executed for this commit has failed, we cannot package your application.";exit 1'
      displayName: 'Quality pipeline failed'
      condition: eq(variables['result'], 'failed')

    - bash: 'echo "The quality pipeline executed for this commit has been canceled, we cannot package your application.";exit 1'
      displayName: 'Quality pipeline canceled'
      condition: eq(variables['result'], 'canceled')

    - bash: 'echo "We could not find any execution of the quality pipeline with this commit, we cannot package your application.";exit 1'
      displayName: 'Quality pipeline not found'
      condition: eq(variables['result'], '')

    - bash: 'echo "The result of the quality pipeline is not over yet;exit 1'
      displayName: 'Quality pipeline not over'
      condition: eq(variables['result'], 'None')

    - task: Bash@3
      displayName: 'Getting the last execution of the Build pipeline to download the right artifact'
      env:
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        targetType: inline
        script: 'chmod 755 $(Build.Repository.LocalPath)/.pipelines/scripts/CheckPipelineExec.sh; $(Build.Repository.LocalPath)/.pipelines/scripts/CheckPipelineExec.sh $(buildPipeline) $(Build.SourceVersion)'

    - task: DownloadPipelineArtifact@2
      displayName: 'Download last artifact from build pipeline'
      inputs:
        source: 'specific'
        project: '$(System.TeamProject)'
        pipeline: $(buildPipeline)
        runVersion: 'specific'
        runBranch: $(Build.SourceBranch)
        downloadPath: $(Pipeline.Workspace)
        runId: $(runId)

    - task: Bash@3
      displayName: "Deploy"
      inputs:
        filePath: '$(Build.Repository.LocalPath)/.pipelines/scripts/library-package.sh'