:toc: macro
toc::[]
:idprefix:
:idseparator: -

= Container Registry
== What is a Container Registry?
* Docker registry is a service that is storing our docker images.
* Docker registry could be hosted by a third party, as public or private registry.
* Could be used one of the below:
  1. Docker Hub (https://docs.docker.com/docker-hub/repos/[link])
  2. Amazon Elastic Container Registry (https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-push-ecr-image.html[ECR])
  3. Google Container Registry (https://cloud.google.com/container-registry/docs/pushing-and-pulling[GCR])
  4. Azure Container Registry (https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-docker-cli?tabs=azure-cli[ACR])
  5. IBM Cloud Container Registry (https://www.ibm.com/cloud/container-registry[link])
  6. Oracle Container Registry (https://docs.oracle.com/en-us/iaas/Content/Registry/Tasks/registrypushingimagesusingthedockercli.htm[link])
  7. Alibaba Cloud Container Registry (https://www.alibabacloud.com/help/doc-detail/198212.htm[link])
  8. GitLab Container Registry (https://docs.gitlab.com/ee/user/packages/container_registry/[link])
  9. JFrog Container Registry (https://jfrog.com/container-registry/[link])
  10. Red Hat Quay  (https://quay.io/[link])
  11. Harbor  (https://goharbor.io/docs/2.3.0/install-config/[link])
  12. Portus  (http://port.us.org/docs/first-steps.html[link])
* We can host the Docker Registry by ourself using "docker registry" or other options like Quay, Harbor, Portus, etc.

== What is a Container Repository?
* Docker repository is a collection of different docker images with same name, that have different tags. 
* Tag is alphanumeric identifier of the image within a repository.
* For example see https://hub.docker.com/r/library/python/tags/[DockerTagExample]. 
  - There are many different tags for the official python image, these tags are all members of the official python repository on the Docker Hub. 
  - Docker Hub is a Docker Registry hosted by Docker.
  
== What is Docker Registry and why to use it?
* The Registry is a stateless, highly scalable server side application that stores and lets you distribute Docker images. 
* The Registry is open-source, under the permissive Apache license.
* You should use the Registry if you want to:
  - tightly control where your images are being stored
  - fully own your images distribution pipeline
  - integrate image storage and distribution tightly into your in-house development workflow
* Users looking for a zero maintenance, ready-to-go solution are encouraged to head-over to the Docker Hub.
* Docker Hub provides a free-to-use, hosted Registry, plus additional features (organization accounts, automated builds, and more).
* The Registry is compatible with Docker engine version 1.6.0 or higher.

== How to use Docker Hub?
* We will demonstrate how to pull an image from Docker Hub to your local machine, and then push a version with a tag back to your own repository.
* Step#1 - You will need a Docker Hub account. If you dont have one, please create one here - https://hub.docker.com/
* Step#2 - Once you have a Docker Hub account, you can create a repository in just a few clicks at https://hub.docker.com/repositories. First, click "Create Repository"
* Step#3 - Use the following command and login to Docker Hub account. You will see a message saying "Login Succeeded" after authenticating with Password.
  - sudo docker login -u <username>
  - Ex: sudo docker login -u sundharakanthan
* Step#4 - Use the following command to pull the docker container image from Docker Hub to local machine.
  - sudo docker pull hello-world
  - Ex: sudo docker pull sundharakanthan/nodejssampleprj
* Step#5 - Use the following command to push an image to private repository.
  - sudo docker push <username>/<imagename>
  - Ex: 
	- sudo docker images
	- sudo docker tag nodejssampleprj sundharakanthan/nodejssampleprj:v1.1.1.1
	- sudo docker images
	- sudo docker pull sundharakanthan/nodejssampleprj:v1.1.1.1
* Going back to our Docker Hub account, we can see the new tag is stored in our private repository [https://hub.docker.com/u/sundharakanthan].
