:toc: macro
toc::[]
:idprefix:
:idseparator: -

== How to use Docker Hub?
* We will demonstrate how to pull an image from Docker Hub to your local machine, and then push a version with a tag back to your own repository.
* Step#1 - You will need a Docker Hub account. If you dont have one, please create one here - https://hub.docker.com/
* Step#2 - Once you have a Docker Hub account, you can create a repository in just a few clicks at https://hub.docker.com/repositories. First, click "Create Repository"
* Step#3 - Use the following command and login to Docker Hub account. You will see a message saying "Login Succeeded" after authenticating with Password.
  - `sudo docker login -u <username>`
  - Ex: `sudo docker login -u sundharakanthan`
* Step#4 - Use the following command to pull the docker container image from Docker Hub to local machine.
  - `sudo docker pull hello-world`
  - Ex: `sudo docker pull sundharakanthan/nodejssampleprj`
* Step#5 - Use the following command to push an image to private repository.
  - `sudo docker push <username>/<imagename>`
  - Ex: 
	- `sudo docker images`
	- `sudo docker tag nodejssampleprj sundharakanthan/nodejssampleprj:v1.1.1.1`
	- `sudo docker images`
	- `sudo docker pull sundharakanthan/nodejssampleprj:v1.1.1.1`
* Going back to our Docker Hub account, we can see the new tag is stored in our private repository [https://hub.docker.com/u/sundharakanthan].

== Docker Pull/Push Commands 
* `docker pull HOSTNAME/PROJECT-ID/IMAGE`
* `docker tag SOURCE_IMAGE HOSTNAME/PROJECT-ID/IMAGE`
* `docker push HOSTNAME/PROJECT-ID/IMAGE`

== AWS Elastic Container Registry
* `aws ecr get-login-password --region region | docker login --username AWS --password-stdin aws_account_id.dkr.ecr.region.amazonaws.com`
* `docker pull aws_account_id.dkr.ecr.region.amazonaws.com/hello-world:latest`
* `docker tag hello-world:latest aws_account_id.dkr.ecr.region.amazonaws.com/hello-world:latest`
* `docker push aws_account_id.dkr.ecr.region.amazonaws.com/hello-world:latest`

== Azure Container Registry
* `az acr login --name mycontainerregistry`
* `docker pull mcr.microsoft.com/hello-world`
* `docker tag mcr.microsoft.com/hello-world mycontainerregistry.azurecr.io/hello-world:v1.1.2`
* `docker push mycontainerregistry.azurecr.io/hello-world:v1.1.2`

== Google Container Registry
* `docker pull gcr.io/google-samples/hello-app:1.0`
* `docker tag gcr.io/google-samples/hello-app:1.0 gcr.io/PROJECT_ID/quickstart-image:tag1`
* `docker push gcr.io/PROJECT_ID/quickstart-image:tag1`

== GitHub Container Registry
* `docker login ghcr.io -u USERNAME --password-stdin`
* `docker pull ghcr.io/OWNER/IMAGE_NAME:1.14.1`
* `docker push ghcr.io/OWNER/IMAGE_NAME:latest`
