
= Setting up a SonarQube instance in AWS
The scope of this section is to deploy an AWS EC2 instance running SonarQube. A script has been created in order to assist you in the launching of a SonarQube instance with an embedded database.

== Getting Started
=== Prerequisites
* https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started[Install Terraform].

* https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html[Install the AWS CLI].

== The scripts

* `main.tf` this script will deploy the AWS infrastructure.
* `datascript.sh` this script will install Docker on your EC2 instance, and deploy a container running SonarQube.
* `variables.tf` this script contains the variables for the script main.tf.
* `terraform.tfvars` this script contains the parameters for the variables (changeable).

== Usage

Download the files from `...scripts/terrafom/aws/sonarqube`. Open the file `terraform.tfvars` and edit the needed parameters. 

IMPORTANT: If you do not want to change the parameters, you will need a Keypair with the name `sonarqube`.

Run the following script on your command prompt. 

```
execute.sh
```
For inserting new parameters they have to be *Value_name=Parameter* behind execute.sh like in the example below.
```
exaple:  execute.sh var1=par1 var2=par2 ...
```
This script will write the new custom paramaters to the `terraform.tfvars` file. According to this, it will create an ec2 instance with Ubuntu in aws and deploy a Docker container with a sonarqube image on it.  On the command line, you will see the IP address of the ec2 instance.

Once the deployment has finished type `+http://localhost:9000+`(replace localhost with the ec2 instance IP-Address from the output on the command prompt) in your browser and you will have access to your SonarQube. The default values are :

CAUTION: username:   *admin* +
 password:   *admin*