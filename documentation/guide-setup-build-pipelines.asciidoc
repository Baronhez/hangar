= Setting up a Build Pipeline on Azure DevOps

In this section we will create a build pipeline for compiling project code. The script located at `\scripts\pipelines\azure-devops\build_pipeline_generator.sh` will assist you on the creation of the build pipeline.

This script either creates a new pipeline from scratch or creates a new pipeline from a `.yaml` file already inside your repository. See <<usage>> section for further details.

== Description of the script

=== Syntax
```
    build_pipeline_generation.ps1
        [-name <String>]
        [-repository <String>]
        [-branch <String>]
        [-yamlPath <String>]

```

=== Arguments
```
    -name:         [Required] Name that will be set to the build pipeline.
    -repository    [Required] URL of the repository where the code is located.
    -branch        [Required] Name of the branch for which the pipeline will be configured.
    -yamlPath                 Path to the yaml file (inside of the repository).
```

=== Examples

Create a pipeline from scratch: +

```
    .\build_pipeline_generation.ps1 -name 'my_build_pipeline' -repository <my_azure_repo_url> -branch master
```

Create a pipeline from a `.yaml` file in the repository: +
```
    .\build_pipeline_generation.ps1 -name 'my_build_pipeline' -repository <my_azure_repo_url> -branch master -yamlFile azure-pipelines.yml
```

== Usage of the script

As it has been mentioned before, you are able to execute this script in two different ways.

The first way would be if you want to create a new build pipeline based on a `.yaml` file which already exists inside your azure repository. In order to create the pipeline you will need to:

. Execute the script like in the example before: `.\build_pipeline_generation.ps1 -name 'my_build_pipeline' -repository <my_azure_repo_url> -branch master -yamlFile azure-pipelines.yml`.
. Select the option `Existing yaml`, which should be `[1]`.
. Select whether you want to continue the execution or edit/view the `.yaml` file.
.. `[1]` will continue the execution with the `.yaml` file from the repository.
.. `[2]` will open a text editor with the `.yaml` file allowing you to make changes.
. Check on your Azure DevOps that your pipeline is up and running.

The other way to execute this script would be if you want to create a new build pipeline but you do not have any `.yaml` file in your repository. In order to create the pipeline and the `.yaml` file, you will need to:

. Execute the script like in the example before: `.\build_pipeline_generation.ps1 -name 'my_build_pipeline' -repository	<my_azure_repo_url> -branch master`.
. Select the pipeline template according to the programming language of your project.
. Select the second option (`[2]`) to edit the `.yaml` file.
.. Replace `{{ branch }}` with `master`.
.. Replace `{{ pool }}` with `'<agent_used>'` (For example: vmImage: 'ubuntu-latest').
.. Edit the steps as desired in order to build your project.
. Select the first option (`[1]`) in order to proceed the execution with this new `.yaml` file.
. Select the branch where you want to commit this `.yaml` file.
.. `[1]` will commit the file into the master branch.
.. `[2]` will create a new branch where the file will be commited.
. Check on your Azure DevOps that your pipeline is up and running.

WARNING: If the pipeline does not build properly, check the `.yaml` for errors.
