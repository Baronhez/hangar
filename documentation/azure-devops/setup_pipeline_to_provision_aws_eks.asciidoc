:toc: macro
toc::[]
:idprefix:
:idseparator: -
== Setup Pipeline to provision AWS EKS using Terraform
In this section we will create a pipeline to provision AWS EKS cluster using Terraform scripts. This pipeline will be configured to be triggered every time there is a commit to the Azure DevOps repository, regardless of which branch it is made on.

The creation of the pipeline will follow the project workflow, so a new branch named `feature/provision-aws-eks-pipeline` will be created and the YAML file for the pipeline will be pushed to it. 

Then, a Pull Request (PR) will be created in order to merge the new branch into the appropriate branch (provided in `-b` flag). The PR will be automatically merged if the repository policies are met. If the merge is not possible, either the PR URL will be shown as output, or it will be opened in your web browser if using `-w` flag.

The script located at `/scripts/pipelines/azure-devops/provision_aws_eks.sh` will automatically create this new branch, create a build pipeline based on a YAML template appropriate for the project programming language or framework, create the Pull Request and, if it is possible, merge this new branch into the specified branch.

=== Prerequisites
* https://kubernetes.io/docs/tasks/tools/[Install kubectl]
* https://github.com/terraform-aws-modules/terraform-aws-eks/blob/master/docs/iam-permissions.md[AWS IAM User has EKS access]

=== Usage

Download the files from `...scripts/terrafom/aws/eks`. Open the file `terraform.tfvars` and edit or add the needed parameters.

Run the following command on your command prompt.
```
provision-aws-ek.sh
  -c <configuration file path> \
  -n <name> \
  -d <directory of local project> \
  -b <brach name to which PR will target> \
  -e <AWS EKS clustername> \
  -s <AWS S3 bucket name> \
```

== Flags

```
-n    [Required] Name that will be set to the pipeline.
-d    [Required] Local directory of your project (the path should always be using '/' and not '\').
-c    [Required] Configuration file path.
-e    [Required] AWS EKS Cluster name
-s    [Required] AWS S3 Bucket Name(used by Terraform to store remote state).
-k    [Required] AWS S3 Bucket path(used by Terraform to store remote state file)
-b    [Required] Name of the branch to which the pull request will target. PR is not created if the flag is not provided.
-w               Open the pull request on the web browser if it can not be automatically merged. Requires -b flag.

```

To interact with your cluster, run this command in your terminal:
```
aws eks --region <<region_name>> update-kubeconfig --name <<cluster_name>>
```
