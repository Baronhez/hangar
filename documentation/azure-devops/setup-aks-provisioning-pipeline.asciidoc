= Setting up the AKS provisioning pipeline

In this section we will create a pipeline which will provison an AKS. This pipeline will be configured to be triggered manunally by the user.

The creation of the pipeline will follow the project workflow, so a new branch named `feature/aks-provisioning` will be created, the YAML file for the pipeline and the terraform files for creating the cluster will be pushed to it.

Then, a Pull Request (PR) will be created in order to merge the new branch into the appropiate branch (provided in `-b` flag). The PR will be automatically merged if the repository policies are met. If the merge is not possible, either the PR URL will be shown as output, or it will be opened in your web browser if using `-w` flag.

The script located at `/scripts/pipelines/azure-devops/pipeline_generator.sh` will automatically create this new branch, create the aks provisioning pipeline based on the YAML template, create the Pull Request and, if it is possible, merge this new branch into the specified branch.

== Prerequisites

* Install the https://marketplace.visualstudio.com/items?itemName=ms-devlabs.custom-terraform-tasks[Terraform extension] for Azure DevOps.
* Create a https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml#create-a-service-connection[service connection] to Azure Resource Manager (Name this service connection `aks-connection`).
* This script will commit and push the corresponding YAML template into your repository, so please be sure your local repository is up-to-date (i.e you have pulled the latest changes with `git pull`).
* Have a resource group in Azure. You can use an existing one or create a new one with the following command:

```
az group create -n <resource group name> -l <location>
```

* Have a storage container in Azure. You can use an existing one or create a new one with the following command:

```
az storage account create -n <storage account name> -g <resource group name> -l <location>
```

NOTE: Set the same `<resource group name>` and `<location>` as when creating the resource group.

* Have a storage container in Azure. You can use an existing one or create a new one with the following command:

```
az storage container create -n <storage container name> --account-name <storage account name>
```

NOTE: Set the same `<storage account name>` as when creating the storage account.

== Creating the pipeline using provided script

Before executing the script you will need to customize some input variables about the environment. To do so, you can either edit `terraform.tfvars` file or take advantage of the `set-config.sh` script, which allows you ti create or update values for the required variables, passing them as flags. As a full example

```
./set-config.sh --cluster_name <cluster name> --location <location> --resource_group_name <resource group name> --instance_type <instance type> --worker_node_count <number of worker nodes> --dns_prefix <dns prefix>
```

=== Usage
```
pipeline_generator.sh \
  -c <config file path> \
  -n <pipeline name> \
  --resource-group <resource group name> \
  --storage-account <storage account name> \
  --storage-container <storage container name> \
  -d <project local path> \
  [-b <branch>] \
  [-w]
```

NOTE: The config file for the AKS provisioning pipeline is located at `/scripts/pipelines/azure-devops/templates/aks/aks-pipeline.cfg`.

=== Flags
```
-c, --config-file        [Required] Configuration file containing pipeline definition.
-n, --pipeline-name      [Required] Name that will be set to the pipeline.
    --resource-group     [Required] Name of the resource group for the cluster.
    --storage--account   [Required] Name of the storage account for the cluster.
    --storage-container  [Required] Name of the storage container where the tfstate file of the cluster will be stored.
-d, --local-directory    [Required] Local directory of your project (the path should always be using '/' and not '\').
-b, --target-branch                 Name of the branch to which the Pull Request will target. PR is not created if the flag is not provided.
-w                                  Open the Pull Request on the web browser if it cannot be automatically merged. Requires -b flag.
```

=== Example

```
./pipeline_generator.sh -c ./templates/aks/aks-pipeline.cfg -n aks-provisioning --resource-group hangar-aks-rg --storage-account hangarstatefile --storage-container tfstatefile -d C:/Users/$USERNAME/Desktop/quarkus-project -b develop -w
```

=== Appendix: Interacting with the cluster

NOTE: Make sure to have https://kubernetes.io/docs/tasks/tools/[kubectl] installed in order to interact with your cluster.

In order to interact with your cluster download the artifact `kubeconfig` generated by the pipeline and execute the following command:

```
kubectl <kubectl command> --kubeconfig <path to downloaded kubeconfig>
```
