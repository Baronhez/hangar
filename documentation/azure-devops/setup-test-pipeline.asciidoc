= Setting up a Test Pipeline on Azure DevOps

In this section we will create a Azure DevOps Test pipeline for testing project test cases.

== *Prerequisites:*
Before executing the script be sure your local repository is upto date, pull latest changes with `git pull`.

== *Creating Azure DevOps Test Pipeline using provided script*

The script located at `/scripts/pipelines/azure-devops/test_pipeline_generator.sh` will automatically create a test pipeline based on a YAML template, Configuration file `pipeline_configuration.cfg` as parameter containing all the variables parsing in test_pipeline_generator.sh, follow below instructions to execute script.
[loweralpha]
. During the execution of this script, a new git branch with name `feature/test-pipeline` will be created and the `.pipeline` YAML files will be pushed to the same branch.
. Pull Request will be created in order to merge the new branch into the appropriate branch using -b flag. 
. The PR will be automatically merged if the repository policies are met. If the merge is not possible, PR URL will be shown as output or it will be opened in your web browser using -w flag.

:hardbreaks-option:
*Note*: If any test pipeline failed, check the logs for the specific pipeline summary. In more actions you can download complete logs which include additional diagnostic information or you can store application logs in user specifed path.

== Usage

```
./test_pipeline_generator.sh -n <pipeline-name> -l <language or framework> -d <project local path> -b <branch> [-w]
```
== Flags

```
-n    [Required] Name of the test pipeline.
-l    [Required] Language or framework of the project.
-d    [Required] Local directory of your project (the path should always be using '/' and not '\').
-b    [Required] Name of the branch Pull Request target branch, PR won't create without flag .
-w               Open the Pull Request on the web browser if it cannot be automatically merged. Requires -b flag.
```
=== Example

==== Quarkus project

```
./test_pipeline_generator.sh -n quarkus_project_test -l quarkus -d C:/Users/$USERNAME/Desktop/quarkus-project -b master -w
``` 
NOTE: Dynamic variables is configured in `pipeline_configuration.cfg` file and parse in current script file(exp: repository, branch, yaml files path, etc..).


 






