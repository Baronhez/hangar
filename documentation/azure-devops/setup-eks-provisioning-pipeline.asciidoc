:toc: macro
toc::[]
:idprefix:
:idseparator: -

= Setting up the AWS EKS provisioning pipeline
In this section we will create a pipeline which will provision AWS EKS. This pipeline will be configured to be manually triggered by the user. 

The creation of the pipeline will follow the project workflow, so a new branch named `feature/eks-provisioning` will be created, the YAML file for the pipeline and the terraform files for creating the cluster will be pushed to it.

Then, a Pull Request (PR) will be created in order to merge the new branch into the appropiate branch (provided in `-b` flag). The PR will be automatically merged if the repository policies are met. If the merge is not possible, either the PR URL will be shown as output, or it will be opened in your web browser if using `-w` flag.

The script located at `/scripts/pipelines/azure-devops/pipeline_generator.sh` will automatically create this new branch, create the EKS provisioning pipeline based on the YAML template, create the Pull Request and, if it is possible, merge this new branch into the specified branch.

=== Prerequisites

* Install the https://marketplace.visualstudio.com/items?itemName=ms-devlabs.custom-terraform-tasks[Terraform extension] for Azure DevOps.
* Create a https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml#create-a-service-connection[service connection] (Name this `AWS-Terraform-Connection`). If you already have a service connection available or you need a specific connection name, please update in `eks-pipeline.cfg`.

* Create S3 Bucket 
You can use existing one or create a new one with the following command:

```
aws s3 mb <bucketname> 
Example: aws s3 mb s3://terraformStateBucket
```

Refer https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html#using-s3-commands-managing-buckets-creating[here] for more S3 details. You can create a folder inside bucket. Bucket name and the path needs to be passed as parameter to the script while executing. 

* Verify if the AWS IAM user has https://github.com/devonfw/hangar/blob/master/documentation/aws/setup-aws-account-iam-for-eks.asciidoc#check-iam-user-permissions[required permissions] to provision the EKS cluster.


* This script will commit and push the corresponding YAML template into your repository, so please be sure your local repository is up-to-date (i.e you have pulled the latest changes with `git pull`).

== Creating the pipeline using provided script

* The script will by default create a new AWS VPC with name `k8s-vpc`. However, if you wish to provision AWS EKS in your existing `VPC` please edit `existing_vpc_id` and `existing_vpc_private_subnets` with respective values.
* Before executing the script you will need to customize some input variables about the environment. To do so, you can either edit `terraform.tfvars` file or take advantage of the `set-config.sh` script, which allows you ti create or update values for the required variables, passing them as flags. As a an example

```
./set-config.sh --cluster_name <cluster name> --region <region name> --instance_type <instance type> --vpc_name <vpc name> --vpc_cidr_block <vpc_cidr_block>
```

=== Usage
```
pipeline_generator.sh \
  -c <config file path> \
  -n <pipeline name> \
  --s3-bucket <s3 bucket name> \
  --s3-key-path <s3 key path> \
  -d <project local path> \
  -b <branch> \
```

NOTE: The config file for the EKS provisioning pipeline is located at `/scripts/pipelines/azure-devops/templates/eks/eks-pipeline.cfg`.

=== Flags
```
-c, --config-file        [Required] Configuration file containing pipeline definition.
-n, --pipeline-name      [Required] Name that will be set to the pipeline.
    --s3-bucket          [Required] Name of the AWS S3 bucket where tfstate file of the cluster will be stored.
    --s3-key-path        [Required] Path in the AWS S3 bucket where tfstate file of the cluster will be stored.
-d, --local-directory    [Required] Local directory of your project (the path should always be using '/' and not '\').
-b, --target-branch                 Name of the branch to which the Pull Request will target. PR is not created if the flag is not provided.
-w                                  Open the Pull Request on the web browser if it cannot be automatically merged. Requires -b flag.
```

=== Example

```
./pipeline_generator.sh -c ./templates/eks/eks-config.cfg -n eks-provisioning --s3-bucket terraformStateBucket --s3-key-path eks/state -d C:/Users/$USERNAME/Desktop/quarkus-project -b develop -w
```

== Appendix: Interacting with the cluster

NOTE: Make sure to have https://kubernetes.io/docs/tasks/tools/[kubectl] installed in order to interact with your cluster.

In order to interact with your cluster download the artifact `kubeconfig` generated by the pipeline and execute the following command:

```
kubectl <kubectl command> --kubeconfig <path to downloaded kubeconfig>
```
