:toc: macro
toc::[]
:idprefix:
:idseparator: -
= Prepare AWS account for deployment with Azure DevOps
The scope of this section is to prepare an AWS account to be ready for deployment from Azure DevOps to AWS EKS. By the end of this guide, a new user with the required permissions will be created.

== Preparing environment
First of all, install AWS CLI for your OS: https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html


In case you do not have permission to create new IAM users, request it to your AWS administrator asking for the following policies attached. Then go to <<configure-cli>>.
```
AmazonEKSClusterPolicy
AmazonEKSWorkerNodePolicy
AmazonEKSServicePolicy
AmazonEKS_CNI_Policy
AmazonEKSVPCResourceController
```

== Using the script to create the user

The script located at `/scripts/accounts/aws/create-user.sh` will assist you in the creation of a user, also enrolling it in a newly created group with the required policies attached.

In case you do not have AWS access key (needed to authenticate through API), follow this guide to create it: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey

=== Syntax
```
create-user.sh
    [-u <String>]
    [-g <String>]
```
=== Arguments
```
-u      [Required] Username given to the user created by the script
-g      [Required] Group name given to the group created by the script
```
=== Usage
Execute the script, for example:
```
./create-user.sh -u deployeruser -g deploygroup
```
You will be prompted to introduce your AWS credentials as follows:
```
AWS Access Key ID [None]: <accessKeyID>
AWS Secret Access Key [None]: <secretAccessKey>
Default region name [None]: us-west-2
Default output format [None]: json
```
After introducing the credentials, the script will create the user and everything needed. Finally, the newly created user access data will be shown in screen:
```
Access key ID: <accessKeyID>
Secret access key: <secretAccessKey>
```
IMPORTANT: It is mandatory to store the access key ID and the secret access key securely, *it won't be shown again*.

== Configure AWS Cli [[configure-cli]]
Finally, when you have been provided with a user, set up the AWS CLI using the following command:
```
aws configure
```
Fill the prompted fields with your data. For example:
```
AWS Access Key ID [None]: <accessKeyID>
AWS Secret Access Key [None]: <secretAccessKey>
Default region name [None]: us-west-2
Default output format [None]: json
```
Now you have your AWS account ready to use.